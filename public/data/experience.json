[
	{
		"label": "Software Security Engineer",
		"description": "Worked mainly on a thirdparty tracker app.\nUsing python, python the request library, and various web apis, I registered projects into vulnerability scanning apps such as blackduck and anchore (for container vulnerabilty scanning).\nPulled boms.\nRegistered the third-party dependencies in Talko (an internal app for creating software certificates) and VAMS for monitoring the third-party dependencies.\nChallenges:\nThe main challenge I faced was the poor documentation on the internal apps. Because of the poor documentation, it took me a lot of trials and errors to get the app up and running.\nAnother challenge was the lack of naming convention: in talko, to register a dependency, we have to filter the list of available dependencies on talko to find its id, which was difficult due to the names not conforming to the same noms.\nI worked on updating React components for user-manager app.\nChallenges: understanding the way react-ag-grid worked (old and new version), and how the new nokia components worked.\nAnd lastly, the component rendering was a tricky part to handle. Afterall multiple components tried to rerender multiple times, causing a chain reaction. the easiest solution was to use flags and react hoocks such as the should rerender hook.",
		"organization": "Nokia",
		"image": "https://logos-world.net/wp-content/uploads/2020/09/Nokia-Logo.png",
		"images": [
			{
				"image": "https://logos-world.net/wp-content/uploads/2020/09/Nokia-Logo.png"
			},
			{
				"image": "/blackduck_logo.png",
				"label": "BlackDuck"
			},
			{
				"image": "/anchore_logo",
				"label": "Anchore"
			},
			{
				"image": "",
				"label": "Talko"
			},
			{
				"image": "",
				"label": "VAMS"
			}
		],
		"note": ""
	},
	{
		"label": "NSP Software Tester",
		"description": "Automated testing for the NSP platform",
		"organization": "Nokia",
		"image": "https://logos-world.net/wp-content/uploads/2020/09/Nokia-Logo.png",
		"images": [],
		"note": ""
	}
]